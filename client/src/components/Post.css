@import '../theme/variables.css';

:root {
  --post-width: 186px;
  --post-line-height: 20px;
  --post-border-width: 3px;
  --post-metabar-height: 35px;
  --post-content-padding-top: 9px;
}

.Container {
  will-change: transform;
  backface-visibility: hidden;
  position: absolute;
}

.Post {
  position: absolute;
  cursor: move;
  width: var(--post-width);
  max-height: calc(2 * var(--post-content-padding-top) + 9 * var(--post-line-height) + var(--post-metabar-height) + 2 * var(--post-border-width));
  box-shadow: 1px 1px 4px rgba(0, 0, 0, 0.5);
  font-size: var(--font-size-medium);
  line-height: var(--post-line-height);
  color: #222;
  overflow: hidden;
  text-overflow: ellipsis;
  border: var(--post-border-width) solid transparent;
  opacity: 0;
  will-change: transform, opacity;
  backface-visibility: hidden;

  &.IsDragging {
    transition: transform 50ms !important;
    cursor: move !important;
    user-select: none !important;
  }

  & .Meta {
    position: relative;
    height: var(--post-metabar-height);
    font-size: var(--font-size-small);
    line-height: var(--post-metabar-height);
    flex: 0 0 var(--post-metabar-height);
    display: flex;
    justify-content: space-between;

    &::after {
      content: '';
      position: absolute;
      top: 0;
      left: var(--grid-step-size);
      right: var(--grid-step-size);
      height: 1px;
      background: rgba(0, 0, 0, 0.25);
    }

    & .Author {
      flex-grow: 1;
      flex-shrink: 1;
      color: rgba(0, 0, 0, 0.5);
      margin-left: var(--grid-step-size);
    }

    & .MetaButton {
      display: flex;
      margin-right: var(--grid-step-size);

      & svg {
        fill: rgba(0, 0, 0, 0.5);
      }

      &:hover svg {
        fill: rgba(0, 0, 0, 0.8);
      }
    }
  }

  &.IsSelected {
    border: var(--post-border-width) solid #fff;
  }

  &.ColorYellow {
    background-color: #ff9;
  }

  &.ColorRed {
    background-color: #fd765e;
  }

  &.ColorGreen {
    background-color: #96e55d;
  }

  &.ColorPaperLined {
    background: #f2f1f0 url('../theme/images/post-paper-lined-background.svg') 10px -2px repeat-y;

    & .Meta {
      background: #f2f1f0;
    }
  }

  &.IsDone {
    transition: opacity 0.25s ease-out;
    opacity: 0.2 !important;
  }
}

.PostTypeText {
  & .Content {
    outline: 0;
    background: none;
    color: inherit;
    width: 100%;
    min-height: 150px;
    max-height: calc(2 * var(--post-content-padding-top) + 9 * var(--post-line-height));
    box-sizing: border-box;
    margin: 0;
    font-weight: inherit;
    white-space: pre-wrap;
    word-wrap: break-word;
    position: relative;
    pointer-events: none;
    overflow: hidden;

    & div,
    & textarea {
      display: block;
      -webkit-appearance: none;
      outline: inherit;
      background: transparent;
      border: 0;
      color: inherit;
      width: 100%;
      resize: none;
      box-sizing: border-box;
      padding: var(--post-content-padding-top) 10px;
      margin: 0;
      line-height: inherit;
      font-size: var(--font-size-medium);
      font-family: var(--font-family-default);
      font-weight: 400;
      letter-spacing: -0.02em;
      white-space: pre-wrap;
      word-wrap: break-word;
      position: relative;
      cursor: pointer;
      pointer-events: none;
    }

    & a {
      white-space: inherit;
      word-wrap: break-word;
      color: inherit;
      text-decoration: underline;
      pointer-events: all;
    }
  }

  &.IsEditing .Content textarea {
    cursor: text;
    user-select: text;
    pointer-events: all;
  }

  &.ColorGreen.IsEditing {
    border-color: #396f12;
  }

  &.ColorPaperLined.IsEditing {
    border-color: #6b89a2;
  }

  &.ColorRed.IsEditing {
    border-color: #ab1c02;
  }

  &.ColorYellow.IsEditing {
    border-color: #7a7a00;
  }
}

.PostTypeImage {
  background: var(--color-brand-highlight) !important;
  border: 0;
  padding: 0;
  margin: 0;
  height: auto;
  overflow: hidden;
  white-space: normal;
  display: flex;
  flex-direction: column;

  & .Content {
    max-height: var(--post-width);

    & img {
      pointer-events: none;
      width: 100%;
      flex: 1 1 auto;
    }
  }

  & .Meta {
    &::after {
      display: none;
    }
  }
}
